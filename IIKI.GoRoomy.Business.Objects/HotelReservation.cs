using System;
using System.Data;
using IIKI.BaseApp.Utils;
using System.ComponentModel.DataAnnotations;

namespace IIKI.GoRoomy.Business.Objects
{
    [DataTable("dbo.tblHotelReservations")]
    [StoreProcedure("dbo.usp_GetHotelReservations")]
    public class HotelReservation : BaseApp.Business.Objects.BaseEntity
    {

        [AutoGeneratedField(Type = DbType.String, IsShowOnForm = false, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [Display(Name = "RecordCode", Prompt = "RecordCode"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string ReservationCode { get; set; }

        [DataField(Type = DbType.Int64, IsShowOnForm = false, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Hidden)]
        [Display(Name = "CompanyId", Prompt = "CompanyId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CompanyLabels))]
        public long? CompanyId { get; set; }

        [DataField(Type = DbType.Int64, IsShowOnForm = false, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Hidden)]
        [Display(Name = "BranchId", Prompt = "BranchId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.BranchLabels))]
        public long? BranchId { get; set; }

        [DataField(Type = DbType.Int64, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsSearchableField = true)]
        [Display(Name = "HotelId", Prompt = "HotelId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelLabels))]
        public long? HotelId { get; set; }

        [DataField(Type = DbType.Int64, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsSearchableField = true)]
        [Display(Name = "HotelRoomId", Prompt = "HotelRoomId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelRoomLabels))]
        public long? HotelRoomId { get; set; }

        [DataField(Type = DbType.Int64, IsShowOnForm = false, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsSearchableField = false)]
        [Display(Name = "CustomerId", Prompt = "CustomerId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CustomerLabels))]
        public long? CustomerId { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = true, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.TextboxDateTime)]
        [Display(Name = "BookingDateTime", Prompt = "BookingDateTime"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public DateTimeOffset? BookingDateTime { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.TextboxDateTime)]
        [Display(Name = "CheckInDateTime", Prompt = "CheckInDateTime"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public DateTimeOffset? CheckInDateTime { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.TextboxDateTime)]
        [Display(Name = "CheckOutDateTime", Prompt = "CheckOutDateTime"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public DateTimeOffset? CheckOutDateTime { get; set; }

        [DataField(Type = DbType.Int32, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsSearchableField = true)]
        [Display(Name = "ReservationStatusId", Prompt = "ReservationStatusId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public int? ReservationStatusId { get; set; }

        [DataField(Type = DbType.Int32, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsSearchableField = true)]
        [Display(Name = "ReservationMadeByStatusId", Prompt = "ReservationMadeByStatusId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public int? ReservationMadeByStatusId { get; set; }

        [DataField(Type = DbType.Int32, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsSearchableField = true)]
        [Display(Name = "PaymentMethodId", Prompt = "PaymentMethodId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public int? PaymentMethodId { get; set; }

        [DataField(Type = DbType.Decimal, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = true, FieldOrderInGrid = 10, RenderMode = BaseApp.Common.InputRenderModes.TextboxCurrency)]
        [Display(Name = "TotalAmount", Prompt = "TotalAmount"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public decimal? TotalAmount { get; set; }

        [DataField(Type = DbType.Int64, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsSearchableField = true)]
        [Display(Name = "PromotionId", Prompt = "PromotionId"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public long? PromotionId { get; set; }

        [DataField(Type = DbType.Decimal, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.TextboxCurrency)]
        [Display(Name = "TotalDiscount", Prompt = "TotalDiscount"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public decimal? TotalDiscount { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Textbox)]
        [Display(Name = "PromotionComments", Prompt = "PromotionComments"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public string PromotionComments { get; set; }

        [DataField(Type = DbType.Decimal, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.TextboxCurrency)]
        [Display(Name = "TotalAmountPaid", Prompt = "TotalAmountPaid"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public decimal? TotalAmountPaid { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Textbox)]
        [Display(Name = "EmergencyContactName", Prompt = "EmergencyContactName"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public string EmergencyContactName { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Textbox)]
        [Display(Name = "EmergencyContactNumber", Prompt = "EmergencyContactNumber"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public string EmergencyContactNumber { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Textbox)]
        [Display(Name = "CustomerComments", Prompt = "CustomerComments"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public string CustomerComments { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = true, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Textbox)]
        [Display(Name = "HotelComments", Prompt = "HotelComments"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        public string HotelComments { get; set; }

        [DataField(Type = DbType.Int32, IsShowOnForm = false, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.TextboxNumber)]
        [Display(Name = "RecordStatus", Prompt = "RecordStatus"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public byte? RecordStatus { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = false, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Textbox)]
        [Display(Name = "CreatedBy", Prompt = "CreatedBy"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string CreatedBy { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = false, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.TextboxDateTime)]
        [Display(Name = "CreatedDate", Prompt = "CreatedDate"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public DateTimeOffset? CreatedDate { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = false, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.Textbox)]
        [Display(Name = "UpdatedBy", Prompt = "UpdatedBy"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string UpdatedBy { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = false, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1, RenderMode = BaseApp.Common.InputRenderModes.TextboxDateTime)]
        [Display(Name = "UpdatedDate", Prompt = "UpdatedDate"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/, ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public DateTimeOffset? UpdatedDate { get; set; }


        ////
        ///Read Only properties
        ///
        [Display(Name = "TotalCount", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        [ReadOnlyField(Type = DbType.Int32)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public int TotalCount { get; set; }

        [Display(Name = "CustomerId", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CustomerLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowOnForm = true, FieldOrderOnForm = 0, IsShowInGrid = true, FieldOrderInGrid = 3)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string CustomerInfo { get; set; }

        [Display(Name = "CustomerFirstName", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CustomerLabels))]
        [ReadOnlyField(Type = DbType.String, FieldOrderOnForm = 1, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string CustomerFirstName { get; set; }

        [Display(Name = "CustomerLastName", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CustomerLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string CustomerLastName { get; set; }

        [Display(Name = "CustomerEmailAddress", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CustomerLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string CustomerEmailAddress { get; set; }

        [Display(Name = "CustomerCellNumber", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CustomerLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string CustomerCellNumber { get; set; }

        [Display(Name = "HotelName", ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = true, FieldOrderInGrid = 2)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string HotelName { get; set; }

        [Display(Name = "HotelFullAddress", ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string HotelFullAddress { get; set; }

        [Display(Name = "ReservationStatusId", ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string ReservationStatusDescription { get; set; }

        [Display(Name = "ReservationStatusJson")]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string ReservationStatusJson { get; set; }

        [Display(Name = "ReservationMadeByStatusId", ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string ReservationMadeByDescription { get; set; }

        [Display(Name = "ReservationMadeByJson")]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string ReservationMadeByJson { get; set; }

        [Display(Name = "PaymentMethodId", ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelReservationLabels))]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string PaymentMethodDescription { get; set; }

        [Display(Name = "PaymentMethodJson")]
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false, FieldOrderInGrid = 1)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string PaymentMethodJson { get; set; }


        [NonDBField(Type = DbType.String)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string UserId { get; set; }

    }
}