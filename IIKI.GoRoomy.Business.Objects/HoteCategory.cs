using IIKI.GoRoomy.Localization.Resources;
using IIKI.BaseApp.Utils;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System;
using IIKI.BaseApp.Business.Objects;
using IIKI.BaseApp.Localization.Resources;

namespace IIKI.GoRoomy.Business.Objects
{
    [DataTable("dbo.tblHotelCategories")]
    [StoreProcedure("dbo.usp_GetHotelCategories")]
    public class HotelCategory : BaseEntity
    {
        [AutoGeneratedField(Type = DbType.String)]
        [Display(Name = "RecordCode", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string CategoryCode { get; set; }

        [DropDownText]
        [DataField(Type = DbType.String)]
        [Display(Name = "RecordName", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        [Required(ErrorMessageResourceName = "RecordNameRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        [StringLength(510, ErrorMessageResourceName = "StringMinMaxLength", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels), MinimumLength = 0)]
        public string CategoryName { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "RecordNameUrdu", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[Required(ErrorMessageResourceName = "RecordNameUrduRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        [StringLength(510, ErrorMessageResourceName = "StringMinMaxLength", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels), MinimumLength = 0)]
        public string CategoryNameUrdu { get; set; }

        [DataField(Type = DbType.String, IsShowInGrid = false)]
        [Display(Name = "RecordDescription", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[Required(ErrorMessageResourceName = "RecordDescriptionRequired", ErrorMessageResourceType = typeof(CommonLabels))]
        [StringLength(8000, ErrorMessageResourceName = "StringMinMaxLength", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels), MinimumLength = 0)]
        public string CategoryDescription { get; set; }

        [DataField(Type = DbType.Int64, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "CompanyId", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CompanyLabels))]
        //[Required(ErrorMessageResourceName = "CompanyIdRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.HotelCategoryLabels))]
        public long? CompanyId { get; set; }

        [DataField(Type = DbType.Int64, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "BranchId", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.BranchLabels))]
        //[Required(ErrorMessageResourceName = "BranchIdRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.HotelCategoryLabels))]
        public long? BranchId { get; set; }

        [DataField(Type = DbType.Int64, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsShowInGrid = false)]
        [Display(Name = "ParentId", ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelCategoryLabels))]
        //[Required(ErrorMessageResourceName = "ParentIdRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.HotelCategoryLabels))]
        public long? ParentId { get; set; }

        [DataField(Type = DbType.Int32, IsShowOnForm = false, IsShowInGrid = true)]
        [Display(Name = "RecordStatus", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public int? RecordStatus { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "CreatedBy", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string CreatedBy { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "CreatedDate", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public DateTimeOffset? CreatedDate { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "UpdatedBy", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string UpdatedBy { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "UpdatedDate", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public DateTimeOffset? UpdatedDate { get; set; }

        [Display(Name = "ParentId", ResourceType = typeof(HotelCategoryLabels))]
        [ReadOnlyField(Type = DbType.String)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public string ParentCategoryName { get; set; }

        [Display(Name = "TotalCount", ResourceType = typeof(CommonLabels))]
        [ReadOnlyField(Type = DbType.Int32, IsShowInGrid = false)]
        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public int TotalCount { get; set; }

    }
}