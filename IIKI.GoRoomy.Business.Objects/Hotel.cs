using IIKI.BaseApp.Localization.Resources;
using IIKI.BaseApp.Utils;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System;
using System.Collections.Generic;

namespace IIKI.GoRoomy.Business.Objects
{
    [DataTable("dbo.tblHotels")]
    [StoreProcedure("dbo.usp_GetHotels")]
    public class Hotel : BaseApp.Business.Objects.BaseEntity
    {
        public Hotel()
        {
            HotelImages = new List<BaseApp.Business.Objects.EntityDocument>();
            HotelRooms = new List<GoRoomy.Business.Objects.HotelRoom>();
            HotelPolicies = new List<GoRoomy.Business.Objects.HotelPolicy>();
            HotelServices = new List<GoRoomy.Business.Objects.HotelRoomService>();
        }
        [AutoGeneratedField(Type = DbType.String, IsShowOnForm = false)]
        [Display(Name = "RecordCode", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string HotelCode { get; set; }

        [DropDownText]
        [DataField(Type = DbType.String, FieldOrderOnForm = 1)]
        [Display(Name = "RecordName", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[Required(ErrorMessageResourceName = "RecordNameRequired", ErrorMessageResourceType = typeof(CommonLabels))]
        [StringLength(510, ErrorMessageResourceName = "StringMinMaxLength", ErrorMessageResourceType = typeof(CommonLabels), MinimumLength = 0)]
        public string HotelName { get; set; }

        [DataField(Type = DbType.Int64, FieldOrderOnForm = 1.1f, RenderMode = BaseApp.Common.InputRenderModes.Dropdown, IsShowInGrid = false)]
        [Display(Name = "CategoryId", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.ProductCategoryLabels))]
        //[Required(ErrorMessageResourceName = "CategoryIdRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.ProductCategoryLabels))]
        public long CategoryId { get; set; }

        [DataField(Type = DbType.Int64, FieldOrderOnForm = 2, IsShowInGrid = false, IsShowOnForm = false, RenderMode = BaseApp.Common.InputRenderModes.Hidden)]
        [Display(Name = "CityId", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CityLabels))]
        //[Required(ErrorMessageResourceName = "CityIdRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CityLabels))]
        public long CityId { get; set; }

        [DataField(Type = DbType.String, FieldOrderOnForm = 2.1f, IsShowInGrid = false)]
        [Display(Name = "LatLong", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[Required(ErrorMessageResourceName = "LatLongRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        [StringLength(200, ErrorMessageResourceName = "StringMinMaxLength", ErrorMessageResourceType = typeof(CommonLabels), MinimumLength = 0)]
        public string LatLong { get; set; }

        [DataField(Type = DbType.Boolean, FieldOrderOnForm = 3, RenderMode = BaseApp.Common.InputRenderModes.CheckboxOnOffButton)]
        [Display(Name = "AllowRefund", ResourceType = typeof(IIKI.GoRoomy.Localization.Resources.HotelLabels))]
        //[Required(ErrorMessageResourceName = "CategoryIdRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.ProductCategoryLabels))]
        public bool AllowRefund { get; set; }

        [DataField(Type = DbType.Int64, IsShowInGrid = false, IsShowOnForm = false, RenderMode = BaseApp.Common.InputRenderModes.Hidden)]
        [Display(Name = "CompanyId", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CompanyLabels))]
        // [Required(ErrorMessageResourceName = "CompanyIdRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CompanyLabels))]
        public long CompanyId { get; set; }

        [DataField(Type = DbType.Int32, IsShowOnForm = false)]
        [Display(Name = "RecordStatus", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public int? RecordStatus { get; set; }

        [DataField(Type = DbType.String, IsShowInGrid = false, FieldOrderOnForm = 50000, RenderMode = BaseApp.Common.InputRenderModes.Textarea, BootstrapLayoutCol = 12)]
        [Display(Name = "RecordDescription", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[Required(ErrorMessageResourceName = "RecordDescriptionRequired", ErrorMessageResourceType = typeof(CommonLabels))]
        [StringLength(8000, ErrorMessageResourceName = "StringMinMaxLength", ErrorMessageResourceType = typeof(CommonLabels), MinimumLength = 0)]
        public string HotelDescription { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "CreatedBy", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string CreatedBy { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "CreatedDate", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public DateTimeOffset? CreatedDate { get; set; }

        [DataField(Type = DbType.String, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "UpdatedBy", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public string UpdatedBy { get; set; }

        [DataField(Type = DbType.DateTimeOffset, IsShowOnForm = false, IsShowInGrid = false)]
        [Display(Name = "UpdatedDate", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        public DateTimeOffset? UpdatedDate { get; set; }

        //read only fields
        [ReadOnlyField(Type = DbType.String, IsShowInGrid = false)]
        //[Display(Name = "LatLong", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[Required(ErrorMessageResourceName = "LatLongRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[StringLength(200, ErrorMessageResourceName = "StringMinMaxLength", ErrorMessageResourceType = typeof(CommonLabels), MinimumLength = 0)]
        public string ImagePath { get; set; }

        //read only fields
        [ReadOnlyField(Type = DbType.String)]
        //[Display(Name = "LatLong", ResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[Required(ErrorMessageResourceName = "LatLongRequired", ErrorMessageResourceType = typeof(IIKI.BaseApp.Localization.Resources.CommonLabels))]
        //[StringLength(200, ErrorMessageResourceName = "StringMinMaxLength", ErrorMessageResourceType = typeof(CommonLabels), MinimumLength = 0)]
        public string HotelFullAddress { get; set; }

        [ReadOnlyField(Type = DbType.Double, IsShowInGrid = false)]
        public double AverageRating { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "RoomPrice", Prompt = "RoomPrice"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? RoomPrice { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "FirstSlotTime", Prompt = "FirstSlotTime"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? FirstSlotTime { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "FirstSlotRate", Prompt = "FirstSlotRate"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? FirstSlotRate { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "SecondSlotTime", Prompt = "SecondSlotTime"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? SecondSlotTime { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "SecondSlotRate", Prompt = "SecondSlotRate"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? SecondSlotRate { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "ThirdSlotTime", Prompt = "ThirdSlotTime"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? ThirdSlotTime { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "ThirdSlotRate", Prompt = "ThirdSlotRate"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? ThirdSlotRate { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "ForthSlotTime", Prompt = "ForthSlotTime"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? ForthSlotTime { get; set; }

        [ReadOnlyField(Type = DbType.Decimal, IsShowInGrid = false)]
        [Display(Name = "ForthSlotRate", Prompt = "ForthSlotRate"/*, Order = 0, GroupName = "", ShortName = "", Description = "", AutoGenerateField = false, AutoGenerateFilter = false*/)]
        public decimal? ForthSlotRate { get; set; }


        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public List<BaseApp.Business.Objects.EntityDocument> HotelImages { get; set; }

        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public List<GoRoomy.Business.Objects.HotelRoom> HotelRooms { get; set; }

        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        public List<GoRoomy.Business.Objects.HotelPolicy> HotelPolicies { get; set; }

        [System.ComponentModel.DataAnnotations.Schema.NotMapped]
        [DependentObject]
        public List<GoRoomy.Business.Objects.HotelRoomService> HotelServices { get; set; }

    }
}
