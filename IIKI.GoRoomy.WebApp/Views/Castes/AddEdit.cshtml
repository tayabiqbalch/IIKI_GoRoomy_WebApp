@model IIKI.BaseApp.Business.Objects.Caste
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string menuName = IIKI.BaseApp.Localization.Resources.CasteLabels.AddEditTitle;
    ViewBag.Title = ViewBag.Title + " " + menuName;
    string currentControllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string currentAreaName = Convert.ToString(this.ViewContext.RouteData.DataTokens["area"]);
}


<!--Page Header-->
@{
    IIKI.BaseApp.Business.Objects.ViewModel.PageHeaderViewModel pageHeader = new IIKI.BaseApp.Business.Objects.ViewModel.PageHeaderViewModel();
    pageHeader.PageTitle = $"{ViewBag.Title}";
    pageHeader.PageSubTitle = pageHeader.PageTitle.ToLower();
    pageHeader.IsAddEditPage = true;
    pageHeader.breadCrumbs.Add(new IIKI.BaseApp.Business.Objects.ViewModel.PageBreadCrumb() { MenuTitle = "Definitions" });
    pageHeader.breadCrumbs.Add(new IIKI.BaseApp.Business.Objects.ViewModel.PageBreadCrumb() { MenuTitle = "Castes",Controller= "Castes", Action="Index", IsLink = true });
    pageHeader.breadCrumbs.Add(new IIKI.BaseApp.Business.Objects.ViewModel.PageBreadCrumb() { MenuTitle = ViewBag.Title, IsActive = true });
    Html.RenderPartial("_PageHeader", pageHeader);
}

<!--End Page Header-->




<div class="ipage-content">
    @Html.Partial("_AlertMessage")
    @using (Html.BeginForm("AddEdit", currentControllerName, new { Area = currentAreaName }, FormMethod.Post, new { role = "form", @class = "", @id = "AddEditForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="buttons-wraper ipage-buttons-top">
            <div class="row">
                <div class="col-md-12">
                    <div class="float-right">
                        @Html.Partial("_Buttons", new IIKI.BaseApp.Business.Objects.ButtonsViewModel((int)IIKI.BaseApp.Common.PageTypes.AddEdit) { Id = Model.Id, IsDisplaySaveButton = true, IsDisplaySaveAddButton = true, IsDisplayCancelButton = true, SaveButtonType = IIKI.BaseApp.Common.ButtonTypes.Submit, BackURL = Url.Action("Index") })
                    </div>
                </div>
            </div>
        </div>
        <div id="accordion">
            <div class="card icard">
                <div class="card-header">
                    <span class="card-title">@menuName.Trim() Information</span>
                    <a class="collapse-icon" data-bs-toggle="collapse" data-bs-target="#@(menuName.Trim().Replace(" ", "")+"_Info")" aria-expanded="true"></a>
                </div>
                <div id="@(menuName.Trim().Replace(" ", "")+"_Info")" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                    <div class="card-body">

                        <div class="col-md-12">
                            <div class="row form-group">
                                <div class="col-md-6">
                                    @Html.LabelFor(m => m.CasteName, new { @class = "required-field control-label" })
                                    @Html.ValidationMessageFor(m => m.CasteName, "", new { @class = "text-danger" })
                                    <div class="keyboard-wrapper">
                                        @Html.EditorFor(model => model.CasteName, new { htmlAttributes = new { @class = "form-control keyboardInput", @lang = "en", @placeholder = @Html.DisplayNameFor(m => m.CasteName) } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(m => m.CasteNameUrdu, new { @class = "required-field control-label" })
                                    @Html.ValidationMessageFor(m => m.CasteNameUrdu, "", new { @class = "text-danger" })
                                    <div class="keyboard-wrapperRTL">
                                        @Html.EditorFor(model => model.CasteNameUrdu, new { htmlAttributes = new { @class = "form-control keyboardInput", @lang = "ur", @dir = "rtl", @placeholder = @Html.DisplayNameFor(m => m.CasteNameUrdu) } })
                                    </div>
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label" })
                                            @Html.ValidationMessageFor(m => m.ParentId, "", new { @class = "text-danger" })
                                            @Html.DropDownListFor(model => model.ParentId, new SelectList(ViewBag.CasteParentList, "Value", "Text"), new { @class = "form-control" })

                                        </div>
                                        <div class="col-md-12 mt-4">
                                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label-q" })
                                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "checkBoxField" } })
                                            @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.CasteDescription, htmlAttributes: new { @class = "control-label" })
                                            @Html.ValidationMessageFor(m => m.CasteDescription, "", new { @class = "text-danger" })
                                            <div class="keyboard-wrapper">
                                                @Html.TextAreaFor(model => model.CasteDescription, new { @rows = "3", @class = "form-control keyboardInput", @lang = "en", @placeholder = @Html.DisplayNameFor(m => m.CasteDescription) })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="buttons-wraper ipage-buttons-bottom">

            <div class="row">
                <div class="col-md-12">
                    <div class="float-right">
                        @Html.Partial("_Buttons", new IIKI.BaseApp.Business.Objects.ButtonsViewModel((int)IIKI.BaseApp.Common.PageTypes.AddEdit) { Id = Model.Id, IsDisplaySaveButton = true, IsDisplaySaveAddButton = true, IsDisplayCancelButton = true, SaveButtonType = IIKI.BaseApp.Common.ButtonTypes.Submit, BackURL = Url.Action("Index") })
                    </div>
                </div>
            </div>

        </div>
    }

</div>


@section Scripts {

    
    <script>

        $(document).ready(function () {
            $(document).on("click", ".btnFormSubmit", function () {
                if ($("#AddEditForm").valid()) {
                    ShowStickyPopup();
                }
            });
            $(document).on("click", ".btnBackToList", function () {
                ShowStickyPopup();
            });
        });
    </script>
}
