@model IIKI.BaseApp.Business.Objects.ContactType
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string menuName = IIKI.BaseApp.Localization.Resources.ContactTypeLabels.AddEditTitle;
    ViewBag.Title = ViewBag.Title + " " + menuName;
    string currentControllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string currentAreaName = Convert.ToString(this.ViewContext.RouteData.DataTokens["area"]);
}


<div class="card ipage-header  transition animated fadeIn  ">
    <div class="card-body">
        <a class="expand-collapse-header-action" href=""><div class="expand-collapse-header"><i class="fa fa-arrow-up"></i></div></a><h2>@ViewBag.Title</h2>
        <div class="float-right">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>
</div>


<div class="ipage-content">
    @Html.Partial("_AlertMessage")
    @using (Html.BeginForm("AddEdit", currentControllerName, new { Area = currentAreaName }, FormMethod.Post, new { role = "form", @class = "", @id = "AddEditForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="buttons-wraper ipage-buttons-top">
            <div class="row">
                <div class="col-md-12">
                    <div class="float-right">
                        @Html.Partial("_Buttons", new IIKI.BaseApp.Business.Objects.ButtonsViewModel((int)IIKI.BaseApp.Common.PageTypes.AddEdit) { Id = Model.Id, IsDisplaySaveButton = true, IsDisplaySaveAddButton = true, IsDisplayCancelButton = true, SaveButtonType = IIKI.BaseApp.Common.ButtonTypes.Submit, BackURL = Url.Action("Index") })
                    </div>
                </div>
            </div>
        </div>
        <div id="accordion">
            <div class="card icard">
                <div class="card-header">
                    <span class="card-title">@menuName.Trim() Information</span>
                    <a class="collapse-icon" data-bs-toggle="collapse" data-bs-target="#@(menuName.Trim().Replace(" ", "")+"_Info")" aria-expanded="true"></a>
                </div>
                <div id="@(menuName.Trim().Replace(" ", "")+"_Info")" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                    <div class="card-body">

                        <div class="col-md-12">
                            <div class="row form-group">
                                <div class="col-md-6">
                                    @Html.LabelFor(m => m.ContactTypeName, new { @class = "required-field control-label" })
                                    @Html.ValidationMessageFor(m => m.ContactTypeName, "", new { @class = "text-danger" })
                                    <div class="keyboard-wrapper">
                                        @Html.EditorFor(model => model.ContactTypeName, new { htmlAttributes = new { @class = "form-control keyboardInput", @lang = "en", @placeholder = @Html.DisplayNameFor(m => m.ContactTypeName) } })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @Html.LabelFor(m => m.ContactTypeNameUrdu, new { @class = "required-field control-label" })
                                    @Html.ValidationMessageFor(m => m.ContactTypeNameUrdu, "", new { @class = "text-danger" })
                                    <div class="keyboard-wrapperRTL">
                                        @Html.EditorFor(model => model.ContactTypeNameUrdu, new { htmlAttributes = new { @class = "form-control keyboardInput", @lang = "ur", @dir="rtl", @placeholder = @Html.DisplayNameFor(m => m.ContactTypeNameUrdu) } })
                                    </div>
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="col-md-12 mt-4">
                                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label-q" })
                                            @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "checkBoxField" } })
                                            @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="row">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.ContactTypeDescription, htmlAttributes: new { @class = "control-label" })
                                            @Html.ValidationMessageFor(m => m.ContactTypeDescription, "", new { @class = "text-danger" })
                                            <div class="keyboard-wrapper">
                                                @Html.TextAreaFor(model => model.ContactTypeDescription, new { @rows = "3", @class = "form-control keyboardInput", @lang = "en", @placeholder = @Html.DisplayNameFor(m => m.ContactTypeDescription) })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="buttons-wraper ipage-buttons-bottom">

            <div class="row">
                <div class="col-md-12">
                    <div class="float-right">
                        @Html.Partial("_Buttons", new IIKI.BaseApp.Business.Objects.ButtonsViewModel((int)IIKI.BaseApp.Common.PageTypes.AddEdit) { Id = Model.Id, IsDisplaySaveButton = true, IsDisplaySaveAddButton = true, IsDisplayCancelButton = true, SaveButtonType = IIKI.BaseApp.Common.ButtonTypes.Submit, BackURL = Url.Action("Index") })
                    </div>
                </div>
            </div>

        </div>
    }


</div>


@section Scripts {

    
    <script>

        $(document).ready(function () {
            $(document).on("click", ".btnFormSubmit", function () {
                if ($("#AddEditForm").valid()) {
                    ShowStickyPopup();
                }
            });
            $(document).on("click", ".btnBackToList", function () {
                ShowStickyPopup();
            });
        });
    </script>
}
