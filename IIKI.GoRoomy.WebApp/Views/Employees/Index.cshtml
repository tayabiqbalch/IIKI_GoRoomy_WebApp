@using IIKI.BaseApp.Business.Objects;
@using IIKI.BaseApp.Localization.Resources;
@model IEnumerable<Employee>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = EmployeeLabels.Title;
    string currentControllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string currentAreaName = Convert.ToString(this.ViewContext.RouteData.DataTokens["area"]);
}

<div class="card ipage-header  transition animated fadeIn  ">
    <div class="card-body">
        <a class="expand-collapse-header-action" href=""><div class="expand-collapse-header"><i class="fa fa-arrow-up"></i></div></a>
        <h2>@ViewBag.Title</h2>
        <small>List of @ViewBag.Title.ToLower()</small>
        <div class="float-right">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<div class=" ipage-content">
    @Html.Partial("_AlertMessage")
    <div class="ipage-buttons-top ibuttons">
        <div class="row">
            <div class="col-md-12">
                <div class=" float-right">
                    @Html.Partial("_Buttons", new IIKI.BaseApp.Business.Objects.ButtonsViewModel((int)IIKI.BaseApp.Common.PageTypes.Listing) { Id = 0, IsDisplayCreateButton = true, AddEditURL = Url.Action("AddEdit", new { Id = 0 }) })

                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    @using (Html.BeginForm("SearchDataTableRecords", currentControllerName, null, FormMethod.Post, new { role = "form", enctype = "multipart/form-data", @class = "tab-validation", @id = "AddEditForm" }))
                    {

                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="table-records-responsive">
                        <table id="RecordsListTable" class="jq-dt-records-table table responsive nowrap table-hover table-sm ">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EmployeeCode)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.FullName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.CellNumber)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.EmailAddress)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.BirthDate)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.HiringDate)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.DivisionId)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.CasteId)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Gender)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.MaritalStatus)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.RecordStatus)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@Html.Partial("_DeleteRecordForm", new IIKI.BaseApp.Business.Objects.DeleteRecordFormViewModel() { FormActionName = IIKI.BaseApp.Common.CommonStatus.DeleteFormOptions.RemoveRecordFormActionName })

<input type="hidden" id="SearchDataTableRecordsURL" name="SearchDataTableRecordsURL" value="@Url.Action("SearchDataTableRecords",currentControllerName)" />
@section Scripts {
    <script>
        $('#RecordsListTable').DataTable({
            "ajax": {
                "url": $("#SearchDataTableRecordsURL").val(),
                "type": "POST",
                "dataType": "json",
                "data": function (d) {
                    d.IsServerSide = true;
                },
                "error": function (jqXHR, textStatus, error) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(error);
                    if (textStatus === 'parsererror') {

                        swal(
                            {
                                title: "Session Expired",
                                text: "Your login session expired, Please login again to continue.",
                                type: "warning",
                                showCancelButton: false,
                                confirmButtonColor: '#D24637',
                                confirmButtonText: 'Ok',
                                cancelButtonText: "No, cancel it!",
                                closeOnConfirm: true,
                                closeOnCancel: true
                            },
                            function (isConfirm) {
                                if (isConfirm) {

                                    document.location.href = "/";
                                }
                            });
                    }
                },

            },

            "processing": true,
            "serverSide": true,
            "searching": true,
            "pagingType": "full_numbers",
            //Export Buttons
            //"dom": "<'row'<'col-sm-12 col-md-6'B><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'rt>><'row'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-4'i><'col-sm-12 col-md-4'p>>",
            "dom": "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'rt>><'row'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-4'i><'col-sm-12 col-md-4'p>>",
            "order": [[0, 'asc']],
            "language": {
                "emptyTable": "Currently, there are no records to show."
            },
            //"buttons": [
            //    {
            //        "extend": 'csv', text: 'Export / Download CSV',
            //        "exportOptions": {
            //            columns: [0, 1, 2],
            //        },
            //        "title": 'Countries'
            //    }
            //    // 'copy', 'csv', 'excel', 'pdf', 'print'

            //],
            "columns": [
                {
                    "data": "EmployeeCode",

                },
                {
                    "data": "FullName",

                },
                {
                    "data": "CellNumber",

                },
                {
                    "data": "EmailAddress",

                },
                {
                    "data": "BirthDate",
                    "searchable": false,
                    "orderable": true,
                    "render": function (data, type, full, meta) {
                        data = moment(data).format($("#MomentDateFormatWithOutTimeZone").val());

                        return data;
                    }
                },
                {
                    "data": "HiringDate",
                    "searchable": false,
                    "orderable": true,
                    "render": function (data, type, full, meta) {
                        data = moment(data).format($("#MomentDateFormatWithOutTimeZone").val());

                        return data;
                    }
                },
                {
                    "data": "DivisionName",
                    "searchable": true,
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        data = data;

                        return data;
                    }
                },
                {
                    "data": "CasteName",
                    "searchable": true,
                    "orderable": false,
                    "render": function (data, type, full, meta) {
                        data = data + ' ' + full.SubCasteName;

                        return data;
                    }
                },
                {
                    "data": "Gender",

                },
                {
                    "data": "MaritalStatus",

                },
                {
                    "data": "RecordStatus",
                    "searchable": false,
                    "orderable": true,
                    "render": function (data, type, full, meta) {
                        data = GetRecordStatusModal(0, data);
                        return data;
                    }

                },
                {
                    "data": "Id",
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, full, meta) {
                        var strBoth = ButtonsEditRemove(data, '@currentControllerName', 'AddEdit', '');

                        var docUrl = '/ContactDocuments/Index/' + full.ContactId;
                        var addressUrl = '/ContactAddresses/Index/' + full.ContactId + '/' + full.UserId;
                        var permissionUrl = '/BaseAppArea/UserPermissions/AddEdit/' + full.UserId + '?email=' + full.LoginUserName + '&role=' + full.RoleName;

                        var strDoc = '<a href="' + docUrl + '" class="btn btn-dark btn-xs" title="' + $("#EditButtonText").val() + '"><i class="fa fa-eye"></i> ' + $("#ViewDocumentsButtonText").val() + '</a>';
                            strDoc = strDoc + ' <a href="' + addressUrl + '" class="btn btn-dark btn-xs" title="Addresses"><i class="fa fa-address-card"></i> Addresses</a>';
                        strDoc = strDoc + ' <a href="' + permissionUrl + '" class="btn btn-primary btn-xs" title="Permissions" target="_blank"><i class="fa fa-address-card"></i> Permissions</a>';
                        return strBoth + ' ' + strDoc;

                    }
                }
            ]

        });

    </script>
}
