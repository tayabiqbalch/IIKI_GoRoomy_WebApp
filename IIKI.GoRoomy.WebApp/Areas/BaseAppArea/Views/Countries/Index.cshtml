@using IIKI.BaseApp.Business.Objects;
@model IEnumerable<Country>
@using IIKI.BaseApp.Localization.Resources;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = CountryLabels.Title;
    string currentControllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string currentAreaName = Convert.ToString(this.ViewContext.RouteData.DataTokens["area"]);
}

<div class="card ipage-header  transition animated fadeIn  ">
    <div class="card-body">
        <a class="expand-collapse-header-action" href=""><div class="expand-collapse-header"><i class="fa fa-arrow-up"></i></div></a><h2>@ViewBag.Title</h2>
        <small>List of @ViewBag.Title.ToLower()</small>
        <div class="float-right">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<div class=" ipage-content">
    @Html.Partial("_AlertMessage")
    <div class="buttons-wraper ipage-buttons-top">
        <div class="row">
            <div class="col-md-12">
                <div class=" float-right">
                    <a href="@Url.Action("AddEdit",new { id = 0 })" class="btn btn-dark btn-sm"><i class="fa fa-plus"></i> Create New</a>
                </div>
            </div>
        </div>
    </div>
    <div class="card icard">
        <div class="card-body">

            <div class="row">
                <div class="col-md-12">
                    <div class="table-records-responsive itable">
                        <table id="RecordsListTable" class="jq-dt-records-table table responsive nowrap table-hover table-sm ">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.CountryName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ISO3)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ISO2)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.NumericCode)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.PhoneCode)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Capital)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.CurrencyCode)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.CurrencySymbol)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Region)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Subregion)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.RecordStatus)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Partial("_DeleteRecordForm", new IIKI.BaseApp.Business.Objects.DeleteRecordFormViewModel() { FormActionName = IIKI.BaseApp.Common.CommonStatus.DeleteFormOptions.RemoveRecordFormActionName })

<input type="hidden" id="SearchDataTableRecordsURL" name="SearchDataTableRecordsURL" value="@Url.Action("SearchDataTableRecords",currentControllerName)" />
@section Scripts {
    <script>
        $('#RecordsListTable').DataTable({
            "ajax": {
                "url": $("#SearchDataTableRecordsURL").val(),
                "type": "POST",
                "dataType": "json",
                "data": function (d) {
                    d.IsServerSide = true;
                },
                "error": function (jqXHR, textStatus, error) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(error);
                    if (textStatus === 'parsererror') {

                        swal(
                            {
                                title: "Session Expired",
                                text: "Your login session expired, Please login again to continue.",
                                type: "warning",
                                showCancelButton: false,
                                confirmButtonColor: '#D24637',
                                confirmButtonText: 'Ok',
                                cancelButtonText: "No, cancel it!",
                                closeOnConfirm: true,
                                closeOnCancel: true
                            },
                            function (isConfirm) {
                                if (isConfirm) {

                                    document.location.href = "/";
                                }
                            });
                    }
                },

            },

            "processing": true,
            "serverSide": true,
            "searching": true,
            "pagingType": "full_numbers",
            //Export Buttons
            //"dom": "<'row'<'col-sm-12 col-md-6'B><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'rt>><'row'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-4'i><'col-sm-12 col-md-4'p>>",
            "dom": "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'rt>><'row'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-4'i><'col-sm-12 col-md-4'p>>",
            "order": [[0, 'asc']],
            "language": {
                "emptyTable": "Currently, there are no records to show."
            },
            //"buttons": [
            //    {
            //        "extend": 'csv', text: 'Export / Download CSV',
            //        "exportOptions": {
            //            columns: [0, 1, 2],
            //        },
            //        "title": 'Countries'
            //    }
            //    // 'copy', 'csv', 'excel', 'pdf', 'print'

            //],
            "columns": [
                { "data": "CountryName", },
                { "data": "ISO3", },
                { "data": "ISO2", },
                { "data": "NumericCode", },
                { "data": "PhoneCode", },
                { "data": "Capital", },
                { "data": "CurrencyCode", },
                { "data": "CurrencySymbol", },
                { "data": "Region", },
                { "data": "Subregion", },
                {
                    "data": "RecordStatus",
                    "searchable": false,
                    "orderable": true,
                    "render": function (data, type, full, meta) {
                        data = GetRecordStatusModal(0, data);
                        return data;
                    }

                },
                //{
                //    "data": "RecCreatedDt",
                //    "searchable": false,
                //    "orderable": true,
                //    "render": function (data, type, full, meta) {
                //        data = moment(data).format($("#MomentDateTimeFormatWithOutTimeZone").val());

                //        return data;
                //    }
                //},
                {
                    "data": "Id",
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, full, meta) {
                        var strEdit = '';
                        var strRemove = '';
                        var strBoth = '';
                        var strDetails = '';
                        var strViewActivityDetails = '';

                        strEdit = '<a href="/@currentAreaName/@currentControllerName/AddEdit/' + data + '" class="btn btn-dark btn-xs"><i class="fa fa-edit"></i> Edit</a>';
                        strRemove = ' <a href="#" class="btn btn-danger btn-xs" onclick="DeleteRecord(this)" data-Id="' + data + '"><i class="fa fa-trash"></i> Remove</a>';

                        strBoth = strEdit + ' ' + strRemove;
                        return strBoth;

                    }
                }
            ]

        });
    </script>
}

