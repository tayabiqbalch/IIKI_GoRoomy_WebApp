@using IIKI.BaseApp.Business.Objects
@model IEnumerable<SearchUsers>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Users";
    string currentControllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string currentAreaName = Convert.ToString(this.ViewContext.RouteData.DataTokens["area"]);
}

<div class="card ipage-header  transition animated fadeIn  ">
    <div class="card-body">
        <a class="expand-collapse-header-action" href=""><div class="expand-collapse-header"><i class="fa fa-arrow-up"></i></div></a>
        <h2>@ViewBag.Title</h2>
        <small>List of @ViewBag.Title.ToLower()</small>
        <div class="float-right">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<div class=" ipage-content">
    @Html.Partial("_AlertMessage")
    <div class="ipage-buttons-top ibuttons">
        <div class="row">
            <div class="col-md-12">
                <div class=" float-right">
                    <a href="@Url.Action("AddEditUser","Account",new {area="", Id = "" })" class="btn btn-dark btn-sm"><i class="fa fa-plus"></i> Create New</a>

                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    @*@using (Html.BeginForm("SearchUsers", "ManageUsers", FormMethod.Post, new { role = "form", @id = "UsersSearchForm" }))
                    {
                        @Html.AntiForgeryToken()*@

                        <div class="searchFormParams form-horizontal">
                            <div class="form-group row">
                                <div class="col-md-4">
                                    <label class="control-label">Email</label>
                                    <input type="text" id="searchEmail" name="searchEmail" class="form-control" />
                                </div>
                                <div class="col-md-4">
                                    <label class="control-label">First Name</label>
                                    <input type="text" id="searchFirstName" name="searchFirstName" class="form-control" />
                                </div>
                                <div class="col-md-4">
                                    <label class="control-label">Last Name</label>
                                    <input type="text" id="searchLastName" name="searchLastName" class="form-control" />
                                </div>

                            </div>
                            <div class="form-group row">

                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <label class="control-label" for="MarketplaceDate">Apply Date Range?</label>
                                        </div>
                                        <div class="col-md-offset-4 col-md-4">
                                            <input type="checkbox" id="chkApplyDateFilter" name="chkApplyDateFilter" class="chk_checkboxpicker checkBoxField" data-group-cls="btn-group-sm" checked />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label class="control-label" for="MarketplaceDate">Date Range</label>
                                    <div class="input-daterange input-group datepickerrange">
                                        <div class="input-group-append">
                                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                        </div>
                                        <input type="text" class="input-sm form-control" name="StartDate" id="StartDate" value="@(new DateTime(2015,01,01).ToString("dd-MMM-yyyy"))" readonly>
                                        <div class="input-group-append">
                                            <span class="input-group-text">To</span>
                                        </div>
                                        <input type="text" class="input-sm form-control" name="EndDate" id="EndDate" value="@(DateTime.Now.Date.ToString("dd-MMM-yyyy"))" readonly>
                                        <div class="input-group-append">
                                            <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class=" float-right">
                                        <a href="#" class="btn btn-primary mt-4" id="SearchButton"><span class="fa fa-search"></span> Search</a>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="table-records-responsive">
                            <table id="RecordsListTable" class="jq-dt-records-table table responsive nowrap table-hover table-sm ">
                                <thead>
                                    <tr>
                                        <th>Full Name</th>
                                        <th>Email</th>
                                        <th>Created On</th>
                                        <th>Is Active?</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    @*}*@
                </div>
            </div>
        </div>
    </div>
</div>




@Html.Partial("_ChangePasswordModal")
@Html.Partial("_ReplaceLoginEmailModal")
@Html.Partial("_DeleteRecordForm", new IIKI.BaseApp.Business.Objects.DeleteRecordFormViewModel() { FormActionName = IIKI.BaseApp.Common.CommonStatus.DeleteFormOptions.RemoveRecordFormActionName })

<input type="hidden" id="SearchDataTableRecordsURL" name="SearchDataTableRecordsURL" value="@Url.Action("SearchDataTableRecords",currentControllerName)" />
@section Scripts {
    <script>
        $(document).ready(function () {


            $(document).on('keypress', function (e) {
                if (e.which == 13) {
                    resetDatatableValues();
                }
            });

            $("#chkApplyDateFilter").change(function () {
                showHideDateRange();
            });

        });

        $('#RecordsListTable').DataTable({
            "ajax": {
                "url": $("#SearchDataTableRecordsURL").val(),
                "type": "POST",
                "dataType": "json",
                "data": function (d) {
                    d.UserId = null;
                    d.Email = $("#searchEmail").val();
                    d.UserName = null;
                    d.FirstName = $("#searchFirstName").val();
                    d.LastName = $("#searchLastName").val();
                    d.ApplyDateFilter = $("#chkApplyDateFilter").is(':checked');
                    d.StartDate = $("#StartDate").val();
                    d.EndDate = $("#EndDate").val();
                    d.IsJvUser = false;

                },
                "error": function (jqXHR, textStatus, error) {
                    console.log(jqXHR);
                    console.log(JSON.stringify(jqXHR));
                    console.log(textStatus);
                    console.log(error);
                    if (textStatus === 'parsererror') {

                        //swal(
                        //    {
                        //        title: "Session Expired",
                        //        text: "Your login session expired, Please login again to continue.",
                        //        type: "warning",
                        //        showCancelButton: false,
                        //        confirmButtonColor: '#D24637',
                        //        confirmButtonText: 'Ok',
                        //        cancelButtonText: "No, cancel it!",
                        //        closeOnConfirm: true,
                        //        closeOnCancel: true
                        //    },
                        //    function (isConfirm) {
                        //        if (isConfirm) {

                        //            document.location.href = "/";
                        //        }
                        //    });
                    }
                },

            },

            "processing": true,
            "serverSide": true,
            "searching": false,
            "pagingType": "full_numbers",
            //Export Buttons
            //"dom": "<'row'<'col-sm-12 col-md-6'B><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'rt>><'row'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-4'i><'col-sm-12 col-md-4'p>>",
            "dom": "<'row'><'row'<'col-sm-12'rt>><'row'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-4'i><'col-sm-12 col-md-4'p>>",
            "order": [[0, 'asc']],
            "language": {
                "emptyTable": "Currently, there are no records to show."
            },
            //"buttons": [
            //    {
            //        "extend": 'csv', text: 'Export / Download CSV',
            //        "exportOptions": {
            //            columns: [0, 1, 2],
            //        },
            //        "title": 'Countries'
            //    }
            //    // 'copy', 'csv', 'excel', 'pdf', 'print'

            //],
            "columns": [
                {
                    "data": "FirstName",
                    "render": function (data, type, full, meta) {
                        data = data + ' ' + full.LastName;
                        return data;
                    }
                },
                {
                    "data": "Email",

                },
                {
                    "data": "CreatedDate",
                    "orderable": true,
                    "render": function (data, type, full, meta) {
                        data = moment(data).tz(Intl.DateTimeFormat().resolvedOptions().timeZone).format('DD-MMM-YYYY hh:mm A (UTC Z)');
                        // data = (moment(data).format($("#MomentDateFormatWithOutTimeZone").val()));

                        return data;
                    }
                },
                //{
                //    "data": "UserIsActive",
                //    "orderable": false,
                //    "render": function (data, type, full, meta) {
                //        if (data) {
                //            data = " <input type='checkbox' data-id='" + full.Id + "' data-value='" + data + "' class='chk_checkboxpicker' id='chkIsActive' name='chkIsActive' data-group-cls='btn-group-sm' checked/>";
                //        }
                //        else {
                //            data = " <input type='checkbox' data-id='" + full.Id + "' data-value='" + data + "' class='chk_checkboxpicker' id='chkIsActive' name='chkIsActive' data-group-cls='btn-group-sm' />";
                //        }
                //        return data
                //    }
                //},
                {
                    "data": "RecordStatus",
                    "searchable": false,
                    "orderable": true,
                    "render": function (data, type, full, meta) {
                        data = GetRecordStatusModal(0, data);

                        return data;
                    }

                },
                {
                    "data": "UserId",
                    "orderable": false,
                    "searchable": false,
                    "render": function (data, type, full, meta) {
                        var strEdit = '';
                        var strRemove = '';
                        var strBoth = '';
                        var strDetails = '';
                        var strPermissions = '';
                        var strViewActivityDetails = '';
                        var editUrl = '@Url.Action("AddEditUser", "Account", new { area = "" })';
                        //strEdit = '<a href="'+editUrl+'/'+data+'" class="btn btn-primary btn-xs btnEditCurrentUserInfo" data-id="' + full.Id + '" data-FirstName="' + full.FirstName + '" data-LastName="' + full.LastName + '" title="Update Password"><i class="fa fa-edit"></i></a>';
                        strEdit = '<a href="#" class="btn btn-primary btn-xs btnChangePassword" data-id="' + full.Id + '" data-Email="' + full.Email + '" data-bs-toggle="modal" title="Change Password"><i class="fa fa-edit"></i></a>';
                        strReplaceEamil = '<a href="#" class="btn btn-primary btn-xs btnReplaceLoginEmailModal" data-id="' + full.Id + '" data-Email="' + full.Email + '" data-bs-toggle="modal" title="Change Login Email"><i class="fa fa-exchange-alt"></i></a>';
                        strViewActivityDetails = '<a target="_blank" href="@Url.Action("UserUpdateActivities", "ManageUsers")?UserId=' + full.Id + ' " class="btn btn-primary btn-xs btnViewActivityDetails" data-id="' + full.Id + '" data-Email="' + full.Email + '" title="View All Acitivities Performed"><i class="fa fa-tasks"></i></a>';

                        strRemove = ' <a href="#" class="btn btn-danger btn-xs" onclick="DeleteRecord(this)" data-Id="' + data + '" title="Remove"><i class="fa fa-trash"></i></a>';
                        var permissionURL = '@Url.Action("AddEdit","UserPermissions")' + '/' + data + '?email=' + full.UserName + '&role=' + full.RoleName;
                        strPermissions = ' <a class="btn btn-secondary btn-xs" target="_blank" href="' + permissionURL + '" title="Edit Permissions"><i class="fa fa-edit"></i></a>';
                        strBoth = strEdit + ' ' + strReplaceEamil + ' ' + strViewActivityDetails + ' ' + strRemove;
                        return strBoth + strPermissions;

                    }
                }
            ],
            "drawCallback": function (settings) {
                $('#RecordsListTable').find("input[type='checkbox']").checkboxpicker();
            }

        });

        $(document).on("click", ".PagingButton", function () {
            resetDatatableValues();
            $("#UsersSearchForm").submit();
        });

        $(document).on("change", "#pPageSize", function () {
            $("#pPageNumber").val(1);
            $("#UsersSearchForm").submit();
        });
        $(document).on("click", "#SearchButton", function () {
            resetDatatableValues();
        });

        $(document).on('change', '#chkIsActive', function () {
            var active = $(this).is(':checked');
            var id = $(this).attr('data-id');
            var lable = "Active";
            if (!active) {
                lable = "In-active";
            }
            swal({
                title: lable + ' User',
                text: 'Are you sure you want to ' + lable + ' this user?',
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: '#D24637',
                confirmButtonText: 'Yes, I am sure!',
                cancelButtonText: "No, cancel it!",
                closeOnConfirm: true,
                closeOnCancel: true
            },
            function (isConfirm) {
                if (isConfirm) {
                    updateUserActive(id, active, 0);

                } else {
                    resetDatatableValues();
                }
            });

            return false;
        });


        function resetDatatableValues() {

            $('select[name="RecordsListTable_length"]').change();
        }
        function showHideDateRange() {
            if ($("#chkApplyDateFilter").is(':checked')) {
                $("#dateRange").css('display', 'block');
            } else {
                $("#dateRange").css('display', 'none');
            }
        }

        var replaceLoginEmailForm = $("#ReplaceLoginEmailForm");


        $(document).on("click", ".btnReplaceLoginEmailModal", function () {
            replaceLoginEmailForm[0].reset();
            $("#CurrentEmail").val($(this).attr('data-email'));
            $("#ReplaceLoginUserId").val($(this).attr('data-id'));

            $("#ReplaceLoginEmailModal").modal('show');
        });

        $(document).on("click", ".btnChangePassword", function () {
            replaceLoginEmailForm[0].reset();
            $("#CurrentEmail").val($(this).attr('data-email'));
            $("#ReplaceLoginUserId").val($(this).attr('data-id'));

            $("#ChangePasswordModal").modal('show');
        });

        replaceLoginEmailForm.validate({
            rules: {
                //CurrentEmail: {
                //    required: true,
                //    maxlength: 256
                //},
                NewEmail: {
                    required: true,
                    maxlength: 256
                },
            },
            messages: {
                //CurrentEmail: {
                //    required: "Please enter Current Email"
                //},
                NewEmail: {
                    required: "Please enter New Email"
                },
            },
            errorPlacement: function (error, element) {
                $(element)
                    .closest("form")
                    .find("label[for='" + element.attr("id") + "']")
                    .append(error);
            },
            errorElement: "span"
        });

        $(".btnReplaceLoginEmailSubmit").click(function () {
            if (!replaceLoginEmailForm.valid()) {
                return false;
            }
            replaceLoginEmailForm.submit(function (e) {

                e.preventDefault();
                var $form = $(this);

                //// check if the input is valid
                //if (!$form.valid()) return false;

                $.ajax({
                    type: replaceLoginEmailForm.attr('method'),
                    url: replaceLoginEmailForm.attr('action'),
                    data: replaceLoginEmailForm.serialize(),
                    success: function (data) {
                        if (data === 'Updated') {
                            $("#ReplaceLoginEmailModal").modal('hide');
                            resetDatatableValues();
                        } else {
                            ShowAllErrorMessage("Email Update Error::" + data);

                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        ShowAllErrorMessage("Email Update Error::" + jqXHR.responseText);
                    }
                });
            });

        });
    </script>
}
