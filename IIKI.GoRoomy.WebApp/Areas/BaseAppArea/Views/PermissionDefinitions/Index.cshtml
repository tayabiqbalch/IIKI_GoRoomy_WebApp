@using IIKI.BaseApp.Business.Objects;
@model IEnumerable<PermissionDefinitions>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Permission Definitions";
    string currentControllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string currentAreaName = Convert.ToString(this.ViewContext.RouteData.DataTokens["area"]);
}


<div class="card ipage-header  transition animated fadeIn  ">
    <div class="card-body">
        <a class="expand-collapse-header-action" href=""><div class="expand-collapse-header"><i class="fa fa-arrow-up"></i></div></a><h2>@ViewBag.Title</h2>
        <small>List of @ViewBag.Title.ToLower()</small>
        <div class="float-right">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<div class=" ipage-content">
    @Html.Partial("_AlertMessage")
    <div class="ipage-buttons-top  ibuttons">
        <div class="row">
            <div class="col-md-12">
                <div class=" float-right">
                    <a href="@Url.Action("AddEdit",new { id = 0 })" class="btn btn-dark btn-sm"><i class="fa fa-plus"></i> Create New Using Form</a>

                    <button onclick="AddEditRecord(this,0)" data-Id="0" data-Title="" data-Description="" data-IsActive="true" class="btn btn-dark btn-sm "><span class="fa fa-plus"></span> Create New</button>
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-body">

            <div class="row">
                <div class="col-md-12">

                    <div class="table-records-responsive">
                        <table id="RecordsListTable" class="jq-dt-records-table table responsive nowrap table-hover table-sm ">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.PermissionTitle)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.PermissionDescription)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.RecordStatus)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PermissionTitle)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PermissionDescription)
                                        </td>
                                        <td>
                                            @Html.Partial("_RecordStatusPartial", new RecordStatusPartialViewModel() { Id = item.Id, RecordStatus = item.RecordStatus })

                                        </td>
                                        <td>
                                            <a href="@Url.Action("AddEdit",new { id = item.Id })" class="btn btn-dark btn-xs"><i class="fa fa-edit"></i> Edit Using Form</a>
                                            <a href="#" onclick="AddEditRecord(this,@item.Id)" data-Id="@item.Id" data-Title="@item.PermissionTitle" data-Description="@item.PermissionDescription" data-IsActive="@(item.RecordStatus==0?false:true)" class="btn btn-primary btn-xs"><i class="fa fa-edit"></i> Edit</a>

                                            <a href="#" class="btn btn-danger btn-xs" onclick="DeleteRecord(this)" data-Id="@item.Id"><i class="fa fa-trash"></i> Remove</a>

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal imodal fade" id="AddEditModal" tabindex="-1" role="dialog" aria-labelledby="AddEditModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("_AddEdit", currentControllerName, new { Area = currentAreaName }, FormMethod.Post, new { role = "form", @class = "", @id = "AddEditForm" }))
            {
                <div class="modal-header">
                    <span class="modal-title" id="AddEditModalTitle">Add Permission Definition</span>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <input type="hidden" id="Id" name="Id" value="0" />
                        <div class="form-group">
                            <div class="col-md-12">
                                <label for="PermissionTitle" class="control-label required-field">Title</label>
                                @Html.ValidationMessage("PermissionTitle", "", new { @class = "text-danger" })
                                @Html.Editor("PermissionTitle", null, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Title" } })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <label for="PermissionDescription" class="control-label required-field">Definition</label>
                                @Html.ValidationMessage("PermissionDescription", "", new { @class = "text-danger" })
                                @Html.TextArea("PermissionDescription", null, new { @class = "form-control", @required = "required", @placeholder = "Definition", @rows = "3" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <label for="IsActive" class="control-label-q">IsActive</label>
                                <input type="checkbox" value="true" class="checkBoxField" data-fieldName="IsActive" id="chkActive" name="chkActive" data-off-active-cls="btn-danger" data-on-active-cls="btn-success" data-group-cls="btn-group-sm" />
                                <input type="hidden" value="true" id="IsActive" name="IsActive" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-dark btn-sm btnSavePopup"><i class="fa fa-save"></i> Save</button>
                    <a href="#" data-bs-dismiss="modal" aria-label="Close" class="btn btn-secondary btn-sm"><i class="fas fa-times"></i> Cancel</a>
                </div>
            }
        </div>
    </div>
</div>

@Html.Partial("_DeleteRecordForm", new IIKI.BaseApp.Business.Objects.DeleteRecordFormViewModel() { FormActionName = IIKI.BaseApp.Common.CommonStatus.DeleteFormOptions.RemoveRecordFormActionName })

<input type="hidden" id="SearchDataTableRecordsURL" name="SearchDataTableRecordsURL" value="@Url.Action("SearchDataTableRecords",currentControllerName)" />
@section Scripts {

    @*@Scripts.Render("~/bundles/jqueryValidation")*@
    <script>

        SetJqueryDatatable('RecordsListTable', [3], [3]);


        $(document).on("click", ".btnSubmitForm", function () {
            if ($("#AddEditForm").valid()) {
                $("#AddEditForm").submit();
            }
        });

        function AddEditRecord(chk, id) {
            $("#AddEditForm")[0].reset();
            //var id = $(chk).attr("data-id");
            var Title = $(chk).attr("data-Title");
            var Description = $(chk).attr("data-Description");
            var IsActive = $(chk).attr("data-IsActive").toLowerCase();
            $("#Id").val(id);
            $("#PermissionTitle").val(Title);
            $("#PermissionDescription").val(Description);
            //$("#IsActive").val('false');
            $("#chkActive").prop('checked', false);
            console.log(IsActive);
            if (IsActive == 'true') {
                console.log(IsActive);

                //$("#IsActive").val('true');
                $("#chkActive").prop('checked', true);
            }
            //$("#PermissionDescription").val(IsActive);
            $("#AddEditModalTitle").html('Edit Permission Definition');

            $("#AddEditModal").modal('show');
        }

        $(document).on("click", ".btnSavePopup", function () {

            var form = $("#AddEditForm");

            //console.log(form.serialize());
            if ($("#AddEditForm").valid()) {
                ShowStickyPopup();

                $.ajax({
                    url: $("#AddEditForm")[0].action,
                    type: $("#AddEditForm")[0].method,
                    data: form.serialize(),
                    dataType: "html",
                    success: function (result) {
                        if (result === "Saved") {
                            $("#AddEditModal").modal('toggle');
                            location.reload();
                        }
                        else if (result === "Already") {
                            CommonErrorMessage("Duplicate Record", "Record already exists");
                        }
                        else if (result === "INVALIDMODEL") {

                            CommonErrorMessage("Invalid Data", "Please enter valid data and fill all required fields.");

                        } else {
                            CommonErrorMessage("Error", result);

                        }
                        HideStickyPopup();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {

                        CommonErrorMessage("Error", jqXHR.responseText);
                        HideStickyPopup();
                    }
                });
            } else {

                CommonErrorMessage("Invalid Data", "Please enter valid data and fill all required fields.");

                return false;
            }
        });



    </script>
}

