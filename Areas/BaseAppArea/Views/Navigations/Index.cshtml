@using IIKI.BaseApp.Business.Objects;
@model IEnumerable<Navigation>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Navigations";
    string currentControllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    string currentAreaName = Convert.ToString(this.ViewContext.RouteData.DataTokens["area"]);
}


<div class="card ipage-header  transition animated fadeIn  ">
    <div class="card-body">
        <a class="expand-collapse-header-action" href=""><div class="expand-collapse-header"><i class="fa fa-arrow-up"></i></div></a><h2>@ViewBag.Title</h2>
        <small>List of @ViewBag.Title.ToLower()</small>
        <div class="float-right">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<div class=" ipage-content">
    @Html.Partial("_AlertMessage")
    <div class="ipage-buttons-top  ibuttons">
        <div class="row">
            <div class="col-md-12">
                <div class=" float-right">
                    @Html.Partial("_Buttons", new IIKI.BaseApp.Business.Objects.ButtonsViewModel((int)IIKI.BaseApp.Common.PageTypes.Listing) { Id = 0, IsDisplayCreateModalButton = true, IsModalPopup = true, IsGetModal = true, GetModalURL = Url.Action("_AddEditModal", new { Id = 0 }), ModalPopupId = "AddEditModal", ModalFormId = "AddEditForm", IsDisplayCreateButton = true, AddEditURL = Url.Action("AddEdit", new { Id = 0 }) })
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-body">

            <div class="row">
                <div class="col-md-12">

                    <div class="table-records-responsive">
                        <table id="RecordsListTable" class="jq-dt-records-table table responsive nowrap table-hover table-sm ">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.MenuTitle)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.DisplayOrder)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ApplicationArea)
                                    </th>
                                    <th>
                                        URL
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.MenuIcon)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ParentMenuTitle)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.RecordStatus)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.MenuTitle)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DisplayOrder)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ApplicationArea)
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.Action))
                                            {
                                                <a href="/@(item.Area + "/" + item.Controller + "/" + item.Action)" target="_blank" title="@(item.Area + "/" + item.Controller + "/" + item.Action)"><i class="fa fa-link"></i></a>
                                            }
                                            @*else
                                                {
                                                    <a href="#" target="_blank" title=""><i class="fa fa-link"></i></a>
                                                }*@
                                        </td>
                                        <td>
                                            @Html.Raw(item.MenuIcon)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ParentMenuTitle)
                                        </td>
                                        <td>
                                            @Html.Partial("_RecordStatusPartial", new RecordStatusPartialViewModel() { Id = item.Id, RecordStatus = item.RecordStatus })

                                        </td>
                                        <td>

                                            @Html.Partial("_Buttons", new IIKI.BaseApp.Business.Objects.ButtonsViewModel((int)IIKI.BaseApp.Common.PageTypes.Listing) { Id = item.Id, IsDisplayModalEditButton = true, IsModalPopup = true, IsGetModal = true, ModalPopupId = "AddEditModal", ModalFormId = "AddEditForm", AddEditURL = Url.Action("AddEdit", new { Id = item.Id }), GetModalURL = Url.Action("_AddEditModal", new { Id = item.Id }), IsDisplayEditButton = true, IsDisplayRemoveButton = true })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    @Html.Partial("_DeleteRecordForm", new IIKI.BaseApp.Business.Objects.DeleteRecordFormViewModel() { FormActionName = IIKI.BaseApp.Common.CommonStatus.DeleteFormOptions.RemoveRecordFormActionName })

<input type="hidden" id="SearchDataTableRecordsURL" name="SearchDataTableRecordsURL" value="@Url.Action("SearchDataTableRecords",currentControllerName)" />
@section Scripts {
    <script>

        SetJqueryDatatable('RecordsListTable', [7], [7]);
    </script>
}

